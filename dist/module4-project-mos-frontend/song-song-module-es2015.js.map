{"version":3,"sources":["./src/app/song/song-list/song-list.component.html","./src/app/song/song/song.component.html","./src/app/song/upload-song/upload-song.component.html","./src/app/service/add-song-to-playlist.service.ts","./src/app/service/audio-upload.service.ts","./src/app/song/song-list/song-list.component.scss","./src/app/song/song-list/song-list.component.ts","./src/app/song/song-routing.module.ts","./src/app/song/song.module.ts","./src/app/song/song/song.component.scss","./src/app/song/song/song.component.ts","./src/app/song/upload-song/upload-song.component.scss","./src/app/song/upload-song/upload-song.component.ts"],"names":[],"mappings":"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","file":"song-song-module-es2015.js","sourcesContent":["export default \"<table class=\\\"table table-striped\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">#</th>\\n    <th scope=\\\"col\\\">Name</th>\\n    <th scope=\\\"col\\\">Release Date</th>\\n    <th scope=\\\"col\\\"></th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let song of songList; index as i\\\">\\n    <th scope=\\\"row\\\">{{ i + 1 }}</th>\\n    <td>{{ song.name }}</td>\\n    <td>{{ song.releaseDate | date }}</td>\\n    <td>\\n      <button (click)=\\\"addToPlaying(song, $event)\\\" [disabled]=\\\"song.isDisabled\\\" class=\\\"btn btn-primary\\\"><i\\n        class=\\\"fas fa-play-circle\\\"></i></button>\\n      <div class=\\\"d-inline-block\\\" ngbDropdown>\\n        <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i\\n          class=\\\"fas fa-ellipsis-h fa-1x\\\"></i></button>\\n        <div aria-labelledby=\\\"dropdownBasic1\\\" ngbDropdownMenu>\\n          <!--          <button ngbDropdownItem [routerLink]=\\\"['/playlist','add-to-playlist',song.id]\\\">Add to playlist</button>-->\\n          <button ngbDropdownItem>Another Action</button>\\n          <button ngbDropdownItem>Something else is here</button>\\n        </div>\\n      </div>\\n    </td>\\n    <td><a [routerLink]=\\\"['/song','edit', song.id]\\\">Edit</a></td>\\n\\n  </tr>\\n  </tbody>\\n</table>\\n<ngb-pagination\\n  [(page)]=\\\"pageNumber\\\"\\n  [collectionSize]=\\\"totalItems\\\"\\n  [pageSize]=\\\"pageSize\\\"></ngb-pagination>\\n\"","export default \"<router-outlet></router-outlet>\\n\"","export default \"<form (ngSubmit)=\\\"upload()\\\" [formGroup]=\\\"songUploadForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"songName\\\">Song Name</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"songName\\\" placeholder=\\\"Enter song name\\\" type=\\\"text\\\">\\n    <div *ngIf=\\\"songUploadForm.get('name').hasError('required') && songUploadForm.get('name').touched\\\"\\n         class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Must be filled!\\n    </div>\\n  </div>\\n\\n  <div *ngFor=\\\"let artist of artists.controls; let i = index;\\\" class=\\\"form-group\\\"\\n       formArrayName=\\\"artists\\\">\\n    <div [formGroupName]=\\\"i\\\">\\n      <mat-form-field>\\n        <label for=\\\"artistName\\\">{{ 'Artist ' + (i + 1) + ' name' }}\\n          <input [matAutocomplete]=\\\"auto\\\" [placeholder]=\\\"'Artist ' + (i + 1) + ' name'\\\" class=\\\"form-control\\\"\\n                 formControlName=\\\"name\\\" id=\\\"artistName\\\" matInput type=\\\"text\\\">\\n        </label>\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n          <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\n            {{option.name}}\\n          </mat-option>\\n        </mat-autocomplete>\\n      </mat-form-field>\\n      <input class=\\\"form-control\\\" formControlName=\\\"birthDate\\\" placeholder=\\\"Birth Date\\\" type=\\\"date\\\">\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"releaseDate\\\">Release Date</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"releaseDate\\\" id=\\\"releaseDate\\\" placeholder=\\\"yyyy-mm-dd\\\" type=\\\"date\\\">\\n    <div *ngIf=\\\"songUploadForm.get('releaseDate').hasError('required') && songUploadForm.get('releaseDate').touched\\\"\\n         class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Must be filled!\\n    </div>\\n  </div>\\n\\n  <label for=\\\"audio\\\">Audio File</label>\\n  <div class=\\\"form-group custom-file\\\">\\n\\n    <label *ngIf=!isAudioFileChosen class=\\\"custom-file-label\\\">Choose file</label>\\n    <label *ngIf=isAudioFileChosen class=\\\"custom-file-label\\\">{{ audioFileName }}</label>\\n    <input (change)=\\\"selectFile($event)\\\" class=\\\"custom-file-input\\\" id=\\\"audio\\\" type=\\\"file\\\">\\n  </div>\\n  <div class=\\\"mt-sm-3\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit</button>\\n  </div>\\n  <span *ngIf=\\\"message\\\">{{ message }}</span>\\n  <div *ngIf=\\\"progress > 0\\\" class=\\\"progress form-group\\\">\\n    <div [style.width.%]=\\\"progress\\\" class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\">\\n    </div>\\n  </div>\\n</form>\\n\\n<pre>{{songUploadForm.value | json}}</pre>\\n\"","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddSongToPlaylistService {\n\n  private emitChangeSource = new Subject<any>();\n\n  changeEmitter$ = this.emitChangeSource.asObservable();\n\n  emitChange(change: any) {\n    this.emitChangeSource.next(change);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {HttpClient, HttpErrorResponse, HttpEvent} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioUploadService {\n  constructor(private http: HttpClient) {\n  }\n\n  uploadSong(formData): Observable<HttpEvent<any>> {\n    return this.http.post<any>(`${environment.apiUrl}/song/upload`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(\n      catchError(this.errorMgmt)\n    );\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n","export default \".dropdown-toggle::after {\\n  content: initial;\\n}\\n\\nbutton {\\n  margin-right: 0.5rem;\\n}\\n\\n* {\\n  color: aliceblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Njb3BleC9tb2R1bGU0LXByb2plY3QtbW9zLWZyb250ZW5kL3NyYy9hcHAvc29uZy9zb25nLWxpc3Qvc29uZy1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zb25nL3NvbmctbGlzdC9zb25nLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGOztBREVBO0VBQ0Usb0JBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9zb25nL3NvbmctbGlzdC9zb25nLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZHJvcGRvd24tdG9nZ2xlOjphZnRlciB7XG4gIGNvbnRlbnQ6IGluaXRpYWxcbn1cblxuYnV0dG9uIHtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG59XG5cbioge1xuICBjb2xvcjogYWxpY2VibHVlO1xufVxuIiwiLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xuICBjb250ZW50OiBpbml0aWFsO1xufVxuXG5idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbn1cblxuKiB7XG4gIGNvbG9yOiBhbGljZWJsdWU7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {SongService} from '../../service/song.service';\nimport {Song} from '../../model/song';\nimport {AddSongToPlaylistService} from '../../service/add-song-to-playlist.service';\nimport {PlayingQueueService} from '../../service/playing-queue.service';\nimport {UserService} from '../../service/user.service';\nimport {User} from '../../model/user.interface';\n\n@Component({\n  selector: 'app-song-list',\n  templateUrl: './song-list.component.html',\n  styleUrls: ['./song-list.component.scss']\n})\nexport class SongListComponent implements OnInit {\n  currentUser: User;\n  private pageNumber: number;\n  private pageSize: number;\n  private totalItems: number;\n  private message;\n  private songList: Song[];\n\n  constructor(private songService: SongService, private addSongToPlaylistService: AddSongToPlaylistService,\n              private playingQueueService: PlayingQueueService, private userService: UserService) {\n    this.userService.currentUser.subscribe(\n      currentUser => {\n        this.currentUser = currentUser;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.songService.getSongList().subscribe(\n      result => {\n        if (result != null) {\n          this.songList = result.content;\n          this.songList.forEach((value, index) => {\n            this.songList[index].isDisabled = false;\n          });\n          this.pageNumber = result.pageable.pageNumber;\n          this.pageSize = result.pageable.pageSize;\n        }\n      }, error => {\n        this.message = 'Cannot retrieve song list. Cause: ' + error.songsMessage;\n      }\n    );\n  }\n\n  addToPlaylist(song) {\n    song.isDisabled = true;\n    this.addSongToPlaylistService.emitChange(song);\n  }\n\n  addToPlaying(song: Song, event) {\n    event.stopPropagation();\n    this.playingQueueService.addToQueue(song);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SongComponent} from './song/song.component';\nimport {UploadSongComponent} from './upload-song/upload-song.component';\nimport {SongListComponent} from './song-list/song-list.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'list',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    component: SongComponent,\n    children: [\n      {\n        path: 'upload',\n        component: UploadSongComponent\n      },\n      {\n        path: 'list',\n        component: SongListComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SongRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SongRoutingModule} from './song-routing.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatAutocompleteModule, MatDatepickerModule, MatInputModule} from '@angular/material';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {SongComponent} from './song/song.component';\nimport {UploadSongComponent} from './upload-song/upload-song.component';\nimport {SongListComponent} from './song-list/song-list.component';\n\n\n@NgModule({\n  declarations: [SongComponent, UploadSongComponent, SongListComponent],\n  imports: [\n    CommonModule,\n    SongRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatDatepickerModule,\n    NgbModule,\n    MatAutocompleteModule\n  ],\n  exports: [SongComponent, UploadSongComponent, SongListComponent]\n})\nexport class SongModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nvbmcvc29uZy9zb25nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-song',\n  templateUrl: './song.component.html',\n  styleUrls: ['./song.component.scss']\n})\nexport class SongComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"* {\\n  color: aliceblue;\\n}\\n\\ninput {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Njb3BleC9tb2R1bGU0LXByb2plY3QtbW9zLWZyb250ZW5kL3NyYy9hcHAvc29uZy91cGxvYWQtc29uZy91cGxvYWQtc29uZy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc29uZy91cGxvYWQtc29uZy91cGxvYWQtc29uZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFLGdCQUFBO0FDRkY7O0FES0E7RUFDRSxZQUFBO0FDRkYiLCJmaWxlIjoic3JjL2FwcC9zb25nL3VwbG9hZC1zb25nL3VwbG9hZC1zb25nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN1Ym1pdC1idG4ge1xufVxuXG4qIHtcbiAgY29sb3I6IGFsaWNlYmx1ZTtcbn1cblxuaW5wdXQge1xuICBjb2xvcjogYmxhY2s7XG59XG4iLCIqIHtcbiAgY29sb3I6IGFsaWNlYmx1ZTtcbn1cblxuaW5wdXQge1xuICBjb2xvcjogYmxhY2s7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\n\nimport {HttpEvent, HttpEventType} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AudioUploadService} from '../../service/audio-upload.service';\nimport {Artist} from '../../model/artist';\n\n@Component({\n  selector: 'app-upload-song',\n  templateUrl: './upload-song.component.html',\n  styleUrls: ['./upload-song.component.scss']\n})\nexport class UploadSongComponent implements OnInit {\n  isAudioFileChosen = false;\n  audioFileName = '';\n  progress = 0;\n  message: string;\n  options: Artist[] = [];\n  filteredOptions: Observable<Artist[]>;\n  songUploadForm: FormGroup;\n  formData = new FormData();\n  file: any;\n\n  constructor(\n    private audioUploadService: AudioUploadService,\n    private fb: FormBuilder\n  ) {\n  }\n\n  get artists(): FormArray {\n    return this.songUploadForm.get('artists') as FormArray;\n  }\n\n  ngOnInit() {\n    this.songUploadForm = this.fb.group({\n      name: ['', Validators.required],\n      artists: this.fb.array([this.createArtist()]),\n      releaseDate: ['', Validators.required]\n    });\n  }\n\n  createArtist(): FormGroup {\n    return this.fb.group({\n      name: '',\n      birthDate: ''\n    });\n  }\n\n  selectFile(event) {\n    if (event.target.files.length > 0) {\n      this.file = event.target.files[0];\n      this.isAudioFileChosen = true;\n      this.audioFileName = event.target.files[0].name;\n    }\n  }\n\n  displayProgress(event, progress) {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        console.log('Request has been made!');\n        break;\n      case HttpEventType.ResponseHeader:\n        console.log('Response header has been received!');\n        break;\n      case HttpEventType.UploadProgress:\n        progress = Math.round(event.loaded / event.total * 100);\n        console.log(`Uploaded! ${progress}%`);\n        break;\n      case HttpEventType.Response:\n        console.log('User successfully created!', event.body);\n        setTimeout(() => {\n          progress = 0;\n        }, 1500);\n    }\n  }\n\n  upload() {\n    this.formData.append('song', new Blob([JSON.stringify(this.songUploadForm.value)], {type: 'application/json'}));\n    this.formData.append('audio', this.file);\n    this.audioUploadService.uploadSong(this.formData).subscribe(\n      (event: HttpEvent<any>) => {\n        this.message = 'Song uploaded successfully!';\n        this.displayProgress(event, this.progress);\n      }, error => {\n        this.message = 'Failed to upload song';\n      }\n    );\n  }\n\n  loadArtistList() {\n  }\n\n  displayFn(artist?: Artist): string | undefined {\n    return artist ? artist.name : undefined;\n  }\n\n  private _filter(name: string): Artist[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n}\n"],"sourceRoot":"webpack:///"}